plot
plot <- ggplot(texas, aes(x=year, y=bmprison, col=state)) + geom_line() + theme_classic()
+ geom_vline(xintercept=1993)
plot <- ggplot(texas, aes(x=year, y=bmprison, col=state)) + geom_line() + theme_classic() +
geom_vline(xintercept=1993)
plo
plot
plot <- ggplot(texas, aes(x=year, y=bmprison, col=state)) + geom_line() + theme_classic() +
geom_vline(xintercept=1993, linetype="dotted")
plot
dataprep_out <- dataprep(
foo = texas,
predictors = c("poverty", "income"),
predictors.op = "mean",
time.predictors.prior = 1985:1993,
special.predictors = list(
list("bmprison", c(1988, 1990:1992), "mean"),
list("alcohol", 1990, "mean"),
list("aidscapita", 1990:1991, "mean"),
list("black", 1990:1992, "mean"),
list("perc1519", 1990, "mean")),
dependent = "bmprison",
unit.variable = "statefip",
unit.names.variable = "state",
time.variable = "year",
treatment.identifier = 48,
controls.identifier = c(1,2,4:6,8:13,15:42,44:47,49:51,53:56),
time.optimize.ssr = 1985:1993,
time.plot = 1985:2000
)
synth_out <- synth(data.prep.obj = dataprep_out)
path.plot(synth_out, dataprep_out)
plot2 <- ggplot(texas, aes(x=year, y=bmprison, col=texas)) + geom_line() + theme_classic() +
geom_vline(xintercept=1993, linetype="dotted")
plot2
texas <- texas %>% mutate(dum_texas = as.factor(ifelse(state == "Texas", "Texas", "The Rest")))
summary(texas$dum_texas)
plot2 <- ggplot(texas, aes(x=year, y=bmprison, col=texas)) + geom_line() + theme_classic() +
geom_vline(xintercept=1993, linetype="dotted")
plot2
plot2 <- ggplot(texas, aes(x=year, y=bmprison, col=dum_texas)) + geom_line() + theme_classic() +
geom_vline(xintercept=1993, linetype="dotted")
plot2
rm(list=ls(all=TRUE))
a <- 2
a
3 -> a
a
##  Learn Synthetic Control Method
##  Install packages
# install.packages("haven")
# install.packages("tidyverse")
rm(list=ls(all=TRUE))
##  Setting up the library ----------------------------------------------------
library(tidyverse)
library(haven)
library(Synth)
library(devtools)
if(!require(SCtools)) devtools::install_github("bcastanho/SCtools")
library(SCtools)
library(ggplot2)
##  Import the data -----------------------------------------------------------
texas <- read_dta("https://raw.github.com/scunning1975/mixtape/master/texas.dta") %>%
as.data.frame(.)
##  Exploratory data analysis --------------------------------------------------
#   open the data table
view(texas)
#   list of variables
summary(texas)
#   summary/filtering by state
texas <- texas %>% mutate(dum_texas = as.factor(ifelse(state == "Texas", "Texas", "The Rest")))
summary_before <- texas %>% filter(year < 1993) %>%
group_by(dum_texas) %>%
summarise(bmprate = mean(bmprate),
poverty = mean(poverty),
income  = mean(income))
summary_after <- texas %>% filter(year > 1993) %>%
group_by(dum_texas) %>%
summarise(bmprate = mean(bmprate),
poverty = mean(poverty),
income  = mean(income))
#   visualization of the outcome of interest
#   per state
plot <- ggplot(texas, aes(x=year, y=bmprison, col=state)) + geom_line() + theme_classic() +
geom_vline(xintercept=1993, linetype="dotted")
plot
rm(list=ls(all=TRUE))
##  Learn Synthetic Control Method
##  Install packages
# install.packages("haven")
# install.packages("tidyverse")
rm(list=ls(all=TRUE))
##  Setting up the library ----------------------------------------------------
library(tidyverse)
library(haven)
library(Synth)
library(devtools)
if(!require(SCtools)) devtools::install_github("bcastanho/SCtools")
library(SCtools)
library(ggplot2)
##  Import the data -----------------------------------------------------------
texas <- read_dta("https://raw.github.com/scunning1975/mixtape/master/texas.dta") %>%
as.data.frame(.)
##  Exploratory data analysis --------------------------------------------------
#   open the data table
view(texas)
#   list of variables
summary(texas)
#   summary/filtering by state
texas <- texas %>% mutate(dum_texas = as.factor(ifelse(state == "Texas", "Texas", "The Rest")))
summary_before <- texas %>% filter(year < 1993) %>%
group_by(dum_texas) %>%
summarise(bmprate = mean(bmprate),
poverty = mean(poverty),
income  = mean(income))
summary_after <- texas %>% filter(year > 1993) %>%
group_by(dum_texas) %>%
summarise(bmprate = mean(bmprate),
poverty = mean(poverty),
income  = mean(income))
#   visualization of the outcome of interest
#   per state
plot <- ggplot(texas, aes(x=year, y=bmprison, col=state)) + geom_line() + theme_classic() +
geom_vline(xintercept=1993, linetype="dotted")
plot
summary_before
summary_after
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
##  Setting up the library ----------------------------------------------------
library(tidyverse)
library(haven)
library(Synth)
library(devtools)
if(!require(SCtools)) devtools::install_github("bcastanho/SCtools")
library(SCtools)
library(ggplot2)
a <- 2
a
3 -> a
a
texas <- read_dta("https://raw.github.com/scunning1975/mixtape/master/texas.dta") %>%
as.data.frame(.)
texas
View(texas)
texas$bmprison
bmprison <- texas$bmprison
bmprison
summary_before <- texas %>% filter(year < 1993)
%>% group_by(state)
%>% summarise(bmprison = mean(bmprison))
summary_before <- texas %>% filter(year < 1993) %>%
group_by(state) %>%
summarise(bmprison = mean(bmprison))
summary_before
View(summary_before)
plot <- ggplot(texas, aes(x=year, y=bmprison, col=state)) + geom_line()
plot
plot <- ggplot(texas, aes(x=year, y=bmprison, col=state)) + geom_line() + theme_classic() +
geom_vline(xintercept = 1993, linetype = "dotted")
plot
dataprep_out <- dataprep(
foo = texas,
predictors = c("poverty", "income"),
predictors.op = "mean",
time.predictors.prior = 1985:1993,
special.predictors = list(
list("bmprison", c(1988, 1990:1992), "mean"),
list("alcohol", 1990, "mean"),
list("aidscapita", 1990:1991, "mean"),
list("black", 1990:1992, "mean"),
list("perc1519", 1990, "mean")),
dependent = "bmprison",
unit.variable = "statefip",
unit.names.variable = "state",
time.variable = "year",
treatment.identifier = 48,
controls.identifier = c(1,2,4:6,8:13,15:42,44:47,49:51,53:56),
time.optimize.ssr = 1985:1993,
time.plot = 1985:2000
)
synth_out <- synth(data.prep.obj = dataprep_out)
path.plot(synth_out, dataprep_out)
View(dataprep_out)
?read_dta
cuma_alabama <- texas %>% filter(state == "Alabama")
cuma_alabama
cuma_alabama2 <- texas[state == "Alabama"]
cuma_alabama2 <- texas[texas$state == "Alabama"]
rm(plot)
texas <- texas %>% mutate(dum_texas = ifelse(state == "Texas",1,0))
View(texas)
rm(list=ls(all=TRUE))
# clean the environment
rm(list=ls(all=TRUE))
drought <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-07-20/drought.csv')
head(drought)
summarise(drought)
summary(drought)
library(tidyverse)
view(drought)
drought$drought_lvl = as.factor(drought$drought_lvl)
summary(drought)
?as.factor
?factor
drought <- drought %>%
mutate(drought_lvl = as.factor(drought_lvl)) %>%
filter(drought_lvl != "None")
summary(drought)
rm(drought)
## Set working directory
print(Sys.getenv("USERNAME"))     # <- this is your username
user <- Sys.getenv("USERNAME")
#Thoriq
if (user == "HP Pavilion Gaming15") {
setwd("D:/Documents/GitHub/jagakpk")
#Fauzi
} else if (user == "Fauzi") {
setwd("xxxxxxxx")
#Hapsari
} else if (user == "Hapsari") {
setwd("xxxxxxxx")
}
## Load relevant libraries
library(ggplot2)
library(tidyverse)
library(haven)
# Load subindicator level dataset
sub_data <- as_tibble(read_dta("data/build/output/cleaned-jaga-subindicatorlevel-foranalysis.dta"))
##  DESCRIPTIVE ANALYSIS LETS GOW
##  1. Top 5 Provinces with the highest "gap cases" percentage
top5prov_pctgap <-
sub_data %>% group_by(nama_prov) %>%
summarize(pct_gap = mean(gap),
case_gap = sum(gap))  %>%
arrange(desc(pct_gap))          %>%
mutate(rank = row_number())     %>%
filter(rank <= 5)               %>%
select(-rank)
#   * export the data into csv
top5prov_pctgap %>% write.csv("data/analysis/prov_pctgap.csv", row.names = TRUE)
##  2. Persentase kasus gap tertinggi di setiap area intervensi
area_pctgap <-
sub_data %>% group_by(area_intervensi) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap))         %>%
arrange(desc(pct_gap))                          #Optimalisasi pajak daerah tertinggi!
#   * export the data into csv
area_pctgap %>% write.csv("data/analysis/area_pctgap.csv", row.names = TRUE)
##  3. Top gap cases in indicator level for "Optimalisasi Pajak Daerah" area
pajak_pctgap <-
sub_data %>% filter(area_intervensi == "Optimalisasi Pajak Daerah") %>%
group_by(indikator) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap)) %>%
arrange(desc(pct_gap))  #Kurang menarik, how about the subindicator level?
pajak_pctgapsub <-
sub_data %>% filter(area_intervensi == "Optimalisasi Pajak Daerah") %>%
group_by(sub_indikator) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap)) %>%
arrange(desc(pct_gap))  ## This is more interesting?
sub_data
area_data <-
sub_data %>% group_by(area_intervensi) %>%
summarize(m_nilai = mean(nilai),
m_verif = mean(nilai_verifikasi))
area_data
?mdplot
?multiplot
library(coefplot)
install.packages("coefplot")
library(coefplot)
?multiplot
data(diamonds)
model1 <- lm(price ~ carat + cut, data=diamonds)
model2 <- lm(price ~ carat + cut + color, data=diamonds)
model3 <- lm(price ~ carat + color, data=diamonds)
multiplot(model1, model2, model3)
multiplot(model1, model2, model3, single=FALSE)
multiplot(model1, model2, model3, plot=FALSE)
require(reshape2)
data(tips, package="reshape2")
mod1 <- lm(tip ~ total_bill + sex, data=tips)
mod2 <- lm(tip ~ total_bill * sex, data=tips)
mod3 <- lm(tip ~ total_bill * sex * day, data=tips)
mod7 <- lm(tip ~ total_bill + day + time, data=tips)
multiplot(mod1, mod2, mod3, mod7, single=FALSE, scales="free_x")
multiplot(mod1, mod2, mod3, mod7, single=FALSE, scales="free_x")
multiplot(mod1, mod2, mod3, mod7, single=FALSE, scales="free_x", plot.shapes=TRUE)
multiplot(mod1, mod2, mod3, mod7, single=TRUE, scales="free_x",
plot.shapes=TRUE, plot.linetypes=TRUE)
multiplot(mod1, mod2, mod3, mod7, single=TRUE, scales="free_x",
plot.shapes=FALSE, plot.linetypes=TRUE, legend.position="bottom")
# the secret weapon
multiplot(mod1, mod2, mod3, mod7, coefficients="total_bill", secret.weapon=TRUE)
# horizontal secret weapon
multiplot(mod1, mod2, mod3, mod7, coefficients="total_bill", by="Model", horizontal=FALSE)
rm(list=ls(all=TRUE))
data(diamonds)
model1 <- lm(price ~ carat + cut, data=diamonds)
model2 <- lm(price ~ carat + cut + color, data=diamonds)
model3 <- lm(price ~ carat + color, data=diamonds)
multiplot(model1, model2, model3)
rm(list=ls(all=TRUE))
data(tips, package="reshape2")
mod1 <- lm(tip ~ total_bill + sex, data=tips)
mod2 <- lm(tip ~ total_bill * sex, data=tips)
mod3 <- lm(tip ~ total_bill * sex * day, data=tips)
mod7 <- lm(tip ~ total_bill + day + time, data=tips)
summary(mod1)
multiplot(mod1, mod2, mod3, mod7, coefficients="total_bill", secret.weapon=TRUE)
## Set working directory
print(Sys.getenv("USERNAME"))     # <- this is your username
user <- Sys.getenv("USERNAME")
#Thoriq
if (user == "HP Pavilion Gaming15") {
setwd("D:/Documents/GitHub/jagakpk")
#Fauzi
} else if (user == "Fauzi") {
setwd("xxxxxxxx")
#Hapsari
} else if (user == "Hapsari") {
setwd("xxxxxxxx")
}
## Load relevant libraries
library(ggplot2)
library(tidyverse)
library(haven)
# Load subindicator level dataset
sub_data <- as_tibble(read_dta("data/build/output/cleaned-jaga-subindicatorlevel-foranalysis.dta"))
##  DESCRIPTIVE ANALYSIS LETS GOW
##  1. Top 5 Provinces with the highest "gap cases" percentage
top5prov_pctgap <-
sub_data %>% group_by(nama_prov) %>%
summarize(pct_gap = mean(gap),
case_gap = sum(gap))  %>%
arrange(desc(pct_gap))          %>%
mutate(rank = row_number())     %>%
filter(rank <= 5)               %>%
select(-rank)
#   * export the data into csv
top5prov_pctgap %>% write.csv("data/analysis/prov_pctgap.csv", row.names = TRUE)
##  2. Persentase kasus gap tertinggi di setiap area intervensi
area_pctgap <-
sub_data %>% group_by(area_intervensi) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap))         %>%
arrange(desc(pct_gap))                          #Optimalisasi pajak daerah tertinggi!
#   * export the data into csv
area_pctgap %>% write.csv("data/analysis/area_pctgap.csv", row.names = TRUE)
##  3. Top gap cases in indicator level for "Optimalisasi Pajak Daerah" area
pajak_pctgap <-
sub_data %>% filter(area_intervensi == "Optimalisasi Pajak Daerah") %>%
group_by(indikator) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap)) %>%
arrange(desc(pct_gap))  #Kurang menarik, how about the subindicator level?
pajak_pctgapsub <-
sub_data %>% filter(area_intervensi == "Optimalisasi Pajak Daerah") %>%
group_by(sub_indikator) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap)) %>%
arrange(desc(pct_gap))  ## This is more interesting?
##  4. Mean Differences antara self report dan verifikasi di tiap area intervensi
area_data <-
sub_data %>% group_by(area_intervensi) %>%
summarize(m_nilai = mean(nilai),
m_verif = mean(nilai_verifikasi))
rm(list=ls(all=TRUE))
## Set working directory
print(Sys.getenv("USERNAME"))     # <- this is your username
user <- Sys.getenv("USERNAME")
#Thoriq
if (user == "HP Pavilion Gaming15") {
setwd("D:/Documents/GitHub/jagakpk")
#Fauzi
} else if (user == "Fauzi") {
setwd("xxxxxxxx")
#Hapsari
} else if (user == "Hapsari") {
setwd("xxxxxxxx")
}
## Load relevant libraries
library(ggplot2)
library(tidyverse)
library(haven)
# Load subindicator level dataset
sub_data <- as_tibble(read_dta("data/build/output/cleaned-jaga-subindicatorlevel-foranalysis.dta"))
##  DESCRIPTIVE ANALYSIS LETS GOW
##  1. Top 5 Provinces with the highest "gap cases" percentage
top5prov_pctgap <-
sub_data %>% group_by(nama_prov) %>%
summarize(pct_gap = mean(gap),
case_gap = sum(gap))  %>%
arrange(desc(pct_gap))          %>%
mutate(rank = row_number())     %>%
filter(rank <= 5)               %>%
select(-rank)
#   * export the data into csv
top5prov_pctgap %>% write.csv("data/analysis/prov_pctgap.csv", row.names = TRUE)
##  2. Persentase kasus gap tertinggi di setiap area intervensi
area_pctgap <-
sub_data %>% group_by(area_intervensi) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap))         %>%
arrange(desc(pct_gap))                          #Optimalisasi pajak daerah tertinggi!
#   * export the data into csv
area_pctgap %>% write.csv("data/analysis/area_pctgap.csv", row.names = TRUE)
##  3. Top gap cases in indicator level for "Optimalisasi Pajak Daerah" area
pajak_pctgap <-
sub_data %>% filter(area_intervensi == "Optimalisasi Pajak Daerah") %>%
group_by(indikator) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap)) %>%
arrange(desc(pct_gap))  #Kurang menarik, how about the subindicator level?
pajak_pctgapsub <-
sub_data %>% filter(area_intervensi == "Optimalisasi Pajak Daerah") %>%
group_by(sub_indikator) %>%
summarize(pct_gap  = mean(gap),
case_gap = sum(gap)) %>%
arrange(desc(pct_gap))  ## This is more interesting?
##  4. Mean Differences antara self report dan verifikasi di tiap area intervensi
area_data <-
sub_data %>% group_by(area_intervensi) %>%
summarize(m_nilai = mean(nilai),
m_verif = mean(nilai_verifikasi))
area_data
## Set working directory
print(Sys.getenv("USERNAME"))     # <- this is your username
user <- Sys.getenv("USERNAME")
#Thoriq
if (user == "HP Pavilion Gaming15") {
setwd("D:/Documents/GitHub/jagakpk")
#Fauzi
} else if (user == "Fauzi") {
setwd("xxxxxxxx")
#Hapsari
} else if (user == "Hapsari") {
setwd("xxxxxxxx")
}
## Load relevant libraries
library(ggplot2)
library(tidyverse)
library(haven)
# Load subindicator level dataset
sub_data <- as_tibble(read_dta("data/build/output/cleaned-jaga-subindicatorlevel-foranalysis.dta"))
##  DESCRIPTIVE ANALYSIS LETS GOW
##  1. Top 5 Provinces with the highest "gap cases" percentage
top10kabkot_pctgap <-
sub_data %>% group_by(nama_prov) %>%
summarize(pct_gap = mean(gap),
case_gap = sum(gap))  %>%
arrange(desc(pct_gap))          %>%
mutate(rank = row_number())     %>%
filter(rank <= 10)               %>%
select(-rank)
#   * export the data into csv
top10kabkot_pctgap %>% write.csv("data/analysis
top10kabkot_pctgap
## Set working directory
print(Sys.getenv("USERNAME"))     # <- this is your username
user <- Sys.getenv("USERNAME")
#Thoriq
if (user == "HP Pavilion Gaming15") {
setwd("D:/Documents/GitHub/jagakpk")
#Fauzi
} else if (user == "Fauzi") {
setwd("xxxxxxxx")
#Hapsari
} else if (user == "Hapsari") {
setwd("xxxxxxxx")
}
## Load relevant libraries
library(ggplot2)
library(tidyverse)
library(haven)
# Load subindicator level dataset
sub_data <- as_tibble(read_dta("data/build/output/cleaned-jaga-subindicatorlevel-foranalysis.dta"))
##  DESCRIPTIVE ANALYSIS LETS GOW
##  1. Top 5 Provinces with the highest "gap cases" percentage
top10kabkot_pctgap <-
sub_data %>% group_by(nama_kabkot) %>%
summarize(pct_gap = mean(gap),
case_gap = sum(gap))  %>%
arrange(desc(pct_gap))          %>%
mutate(rank = row_number())     %>%
filter(rank <= 10)               %>%
select(-rank)
#   * export the data into csv
top10kabkot_pctgap %>% write.csv("data/analysis/kabkot10_pctgap.csv", row.names = TRUE)
top10kabkot_pctgap
pajak_pctgap
area_pctgap
pajak_pctgap
pajak_pctgapsub
area_data
##  4. Mean Differences antara self report dan verifikasi di tiap area intervensi
area_data <-
sub_data %>% group_by(area_intervensi) %>%
summarize(m_nilai = mean(nilai),
m_verif = mean(nilai_verifikasi)) %>%
mutate(mean_diff = m_verif - m_nilai) %>%
arrange(desc(mean_diff))
area_data
area_data <-
sub_data %>% group_by(area_intervensi) %>%
summarize(m_nilai = mean(nilai),
m_verif = mean(nilai_verifikasi)) %>%
mutate(mean_diff = m_verif - m_nilai) %>%
arrange(mean_diff)
area_data
